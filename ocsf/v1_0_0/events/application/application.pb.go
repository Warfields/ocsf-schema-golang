// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: ocsf/v1_0_0/events/application/application.proto

package application

import (
	enums "github.com/valllabh/ocsf-schema-golang/ocsf/v1_0_0/events/application/enums"
	objects "github.com/valllabh/ocsf-schema-golang/ocsf/v1_0_0/objects"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event: application
// Event UID: 0
// URL: https://schema.ocsf.io/1.0.0/classes/application
type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusId       enums.APPLICATION_STATUS_ID    `protobuf:"varint,1,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_STATUS_ID" json:"status_id,omitempty"`              // Caption: Status ID;
	TimezoneOffset int32                          `protobuf:"varint,2,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                            // Caption: Timezone Offset;
	Unmapped       *objects.Object                `protobuf:"bytes,3,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                               // Caption: Unmapped Data;
	ActivityId     enums.APPLICATION_ACTIVITY_ID  `protobuf:"varint,4,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_ACTIVITY_ID" json:"activity_id,omitempty"`      // Caption: Activity ID;
	RawData        string                         `protobuf:"bytes,5,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                  // Caption: Raw Data;
	ClassUid       enums.APPLICATION_CLASS_UID    `protobuf:"varint,6,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_CLASS_UID" json:"class_uid,omitempty"`              // Caption: Class ID;
	SeverityId     enums.APPLICATION_SEVERITY_ID  `protobuf:"varint,7,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_SEVERITY_ID" json:"severity_id,omitempty"`      // Caption: Severity ID;
	Count          int32                          `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`                                                                                                    // Caption: Count;
	StatusDetail   string                         `protobuf:"bytes,9,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                   // Caption: Status Details;
	StartTime      int64                          `protobuf:"varint,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                          // Caption: Start Time;
	StatusCode     string                         `protobuf:"bytes,11,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                        // Caption: Status Code;
	Duration       int32                          `protobuf:"varint,12,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                             // Caption: Duration;
	Api            *objects.Api                   `protobuf:"bytes,13,opt,name=api,proto3" json:"api,omitempty"`                                                                                                        // Caption: API Details; Profile: cloud;
	Observables    []*objects.Observable          `protobuf:"bytes,14,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                        // Caption: Observables;
	TypeName       string                         `protobuf:"bytes,15,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                              // Caption: Type Name;
	ActivityName   string                         `protobuf:"bytes,16,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                  // Caption: Activity;
	CategoryName   string                         `protobuf:"bytes,17,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                  // Caption: Category;
	EndTime        int64                          `protobuf:"varint,18,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                // Caption: End Time;
	CategoryUid    enums.APPLICATION_CATEGORY_UID `protobuf:"varint,19,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	TypeUid        enums.APPLICATION_TYPE_UID     `protobuf:"varint,20,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	Metadata       *objects.Metadata              `protobuf:"bytes,21,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                              // Caption: Metadata;
	Message        string                         `protobuf:"bytes,22,opt,name=message,proto3" json:"message,omitempty"`                                                                                                // Caption: Message;
	Status         string                         `protobuf:"bytes,23,opt,name=status,proto3" json:"status,omitempty"`                                                                                                  // Caption: Status;
	Severity       string                         `protobuf:"bytes,24,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                              // Caption: Severity;
	Enrichments    []*objects.Enrichment          `protobuf:"bytes,25,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                        // Caption: Enrichments;
	Time           int64                          `protobuf:"varint,26,opt,name=time,proto3" json:"time,omitempty"`                                                                                                     // Caption: Event Time;
	Cloud          *objects.Cloud                 `protobuf:"bytes,27,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                    // Caption: Cloud; Profile: cloud;
	ClassName      string                         `protobuf:"bytes,28,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                           // Caption: Class;
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_0_0_events_application_application_proto_rawDescGZIP(), []int{0}
}

func (x *Application) GetStatusId() enums.APPLICATION_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.APPLICATION_STATUS_ID(0)
}

func (x *Application) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *Application) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *Application) GetActivityId() enums.APPLICATION_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.APPLICATION_ACTIVITY_ID(0)
}

func (x *Application) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *Application) GetClassUid() enums.APPLICATION_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.APPLICATION_CLASS_UID(0)
}

func (x *Application) GetSeverityId() enums.APPLICATION_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.APPLICATION_SEVERITY_ID(0)
}

func (x *Application) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Application) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *Application) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Application) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *Application) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Application) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *Application) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *Application) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Application) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *Application) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *Application) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Application) GetCategoryUid() enums.APPLICATION_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.APPLICATION_CATEGORY_UID(0)
}

func (x *Application) GetTypeUid() enums.APPLICATION_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.APPLICATION_TYPE_UID(0)
}

func (x *Application) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Application) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Application) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Application) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Application) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *Application) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Application) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *Application) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

// Event: application
// Event UID: 4
// URL: https://schema.ocsf.io/1.0.0/classes/web_resource_access_activity
type WebResourceAccessActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeverityId     enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID  `protobuf:"varint,1,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`      // Caption: Severity ID;
	Unmapped       *objects.Object                                 `protobuf:"bytes,2,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                                // Caption: Unmapped Data;
	HttpResponse   *objects.HttpResponse                           `protobuf:"bytes,3,opt,name=http_response,json=httpResponse,proto3" json:"http_response,omitempty"`                                                                                    // Caption: HTTP Response;
	Actor          *objects.Actor                                  `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                                      // Caption: Actor; Profile: host;
	CategoryName   string                                          `protobuf:"bytes,5,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                                    // Caption: Category;
	EndTime        int64                                           `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                                  // Caption: End Time;
	Enrichments    []*objects.Enrichment                           `protobuf:"bytes,7,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                          // Caption: Enrichments;
	Duration       int32                                           `protobuf:"varint,8,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                               // Caption: Duration;
	Count          int32                                           `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`                                                                                                                     // Caption: Count;
	StatusDetail   string                                          `protobuf:"bytes,10,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                                   // Caption: Status Details;
	Api            *objects.Api                                    `protobuf:"bytes,11,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                         // Caption: API Details; Profile: cloud;
	SrcEndpoint    *objects.NetworkEndpoint                        `protobuf:"bytes,12,opt,name=src_endpoint,json=srcEndpoint,proto3" json:"src_endpoint,omitempty"`                                                                                      // Caption: Source Endpoint;
	Message        string                                          `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`                                                                                                                 // Caption: Message;
	Time           int64                                           `protobuf:"varint,14,opt,name=time,proto3" json:"time,omitempty"`                                                                                                                      // Caption: Event Time;
	RawData        string                                          `protobuf:"bytes,15,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                                  // Caption: Raw Data;
	TypeName       string                                          `protobuf:"bytes,16,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                               // Caption: Type Name;
	Tls            *objects.Tls                                    `protobuf:"bytes,17,opt,name=tls,proto3" json:"tls,omitempty"`                                                                                                                         // Caption: TLS;
	TypeUid        enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID     `protobuf:"varint,18,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	Proxy          *objects.NetworkProxy                           `protobuf:"bytes,19,opt,name=proxy,proto3" json:"proxy,omitempty"`                                                                                                                     // Caption: Proxy;
	Device         *objects.Device                                 `protobuf:"bytes,20,opt,name=device,proto3" json:"device,omitempty"`                                                                                                                   // Caption: Device; Profile: host;
	ActivityId     enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,21,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	HttpRequest    *objects.HttpRequest                            `protobuf:"bytes,22,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`                                                                                      // Caption: HTTP Request;
	ActivityName   string                                          `protobuf:"bytes,23,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                                   // Caption: Activity;
	WebResources   []*objects.WebResource                          `protobuf:"bytes,24,rep,name=web_resources,json=webResources,proto3" json:"web_resources,omitempty"`                                                                                   // Caption: Web Resources;
	Metadata       *objects.Metadata                               `protobuf:"bytes,25,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                               // Caption: Metadata;
	ClassName      string                                          `protobuf:"bytes,26,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                            // Caption: Class;
	TimezoneOffset int32                                           `protobuf:"varint,27,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                            // Caption: Timezone Offset;
	Status         string                                          `protobuf:"bytes,28,opt,name=status,proto3" json:"status,omitempty"`                                                                                                                   // Caption: Status;
	Severity       string                                          `protobuf:"bytes,29,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                               // Caption: Severity;
	CategoryUid    enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID `protobuf:"varint,30,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	Cloud          *objects.Cloud                                  `protobuf:"bytes,31,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                                     // Caption: Cloud; Profile: cloud;
	StatusId       enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID    `protobuf:"varint,32,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`             // Caption: Status ID;
	ClassUid       enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID    `protobuf:"varint,33,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	StartTime      int64                                           `protobuf:"varint,34,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                           // Caption: Start Time;
	StatusCode     string                                          `protobuf:"bytes,35,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                         // Caption: Status Code;
	Observables    []*objects.Observable                           `protobuf:"bytes,36,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                         // Caption: Observables;
}

func (x *WebResourceAccessActivity) Reset() {
	*x = WebResourceAccessActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebResourceAccessActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebResourceAccessActivity) ProtoMessage() {}

func (x *WebResourceAccessActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebResourceAccessActivity.ProtoReflect.Descriptor instead.
func (*WebResourceAccessActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_0_0_events_application_application_proto_rawDescGZIP(), []int{1}
}

func (x *WebResourceAccessActivity) GetSeverityId() enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID(0)
}

func (x *WebResourceAccessActivity) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *WebResourceAccessActivity) GetHttpResponse() *objects.HttpResponse {
	if x != nil {
		return x.HttpResponse
	}
	return nil
}

func (x *WebResourceAccessActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *WebResourceAccessActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *WebResourceAccessActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WebResourceAccessActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *WebResourceAccessActivity) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *WebResourceAccessActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WebResourceAccessActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *WebResourceAccessActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *WebResourceAccessActivity) GetSrcEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.SrcEndpoint
	}
	return nil
}

func (x *WebResourceAccessActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WebResourceAccessActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *WebResourceAccessActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *WebResourceAccessActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *WebResourceAccessActivity) GetTls() *objects.Tls {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *WebResourceAccessActivity) GetTypeUid() enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID(0)
}

func (x *WebResourceAccessActivity) GetProxy() *objects.NetworkProxy {
	if x != nil {
		return x.Proxy
	}
	return nil
}

func (x *WebResourceAccessActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *WebResourceAccessActivity) GetActivityId() enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID(0)
}

func (x *WebResourceAccessActivity) GetHttpRequest() *objects.HttpRequest {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

func (x *WebResourceAccessActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *WebResourceAccessActivity) GetWebResources() []*objects.WebResource {
	if x != nil {
		return x.WebResources
	}
	return nil
}

func (x *WebResourceAccessActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *WebResourceAccessActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *WebResourceAccessActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *WebResourceAccessActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WebResourceAccessActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *WebResourceAccessActivity) GetCategoryUid() enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID(0)
}

func (x *WebResourceAccessActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *WebResourceAccessActivity) GetStatusId() enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID(0)
}

func (x *WebResourceAccessActivity) GetClassUid() enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID(0)
}

func (x *WebResourceAccessActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *WebResourceAccessActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *WebResourceAccessActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

// Event: application
// Event UID: 2
// URL: https://schema.ocsf.io/1.0.0/classes/application_lifecycle
type ApplicationLifecycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusDetail   string                                   `protobuf:"bytes,1,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                             // Caption: Status Details;
	Unmapped       *objects.Object                          `protobuf:"bytes,2,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                         // Caption: Unmapped Data;
	StartTime      int64                                    `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                     // Caption: Start Time;
	Api            *objects.Api                             `protobuf:"bytes,4,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                   // Caption: API Details; Profile: cloud;
	Cloud          *objects.Cloud                           `protobuf:"bytes,5,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                               // Caption: Cloud; Profile: cloud;
	Count          int32                                    `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`                                                                                                              // Caption: Count;
	Device         *objects.Device                          `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`                                                                                                             // Caption: Device; Profile: host;
	RawData        string                                   `protobuf:"bytes,8,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                            // Caption: Raw Data;
	Observables    []*objects.Observable                    `protobuf:"bytes,9,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                   // Caption: Observables;
	Severity       string                                   `protobuf:"bytes,10,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                        // Caption: Severity;
	EndTime        int64                                    `protobuf:"varint,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                          // Caption: End Time;
	Metadata       *objects.Metadata                        `protobuf:"bytes,12,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                        // Caption: Metadata;
	Enrichments    []*objects.Enrichment                    `protobuf:"bytes,13,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                  // Caption: Enrichments;
	ActivityId     enums.APPLICATION_LIFECYCLE_ACTIVITY_ID  `protobuf:"varint,14,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	Actor          *objects.Actor                           `protobuf:"bytes,15,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                              // Caption: Actor; Profile: host;
	TimezoneOffset int32                                    `protobuf:"varint,16,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                     // Caption: Timezone Offset;
	ClassUid       enums.APPLICATION_LIFECYCLE_CLASS_UID    `protobuf:"varint,17,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	Duration       int32                                    `protobuf:"varint,18,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                       // Caption: Duration;
	ActivityName   string                                   `protobuf:"bytes,19,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                            // Caption: Activity;
	CategoryName   string                                   `protobuf:"bytes,20,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                            // Caption: Category;
	Status         string                                   `protobuf:"bytes,21,opt,name=status,proto3" json:"status,omitempty"`                                                                                                            // Caption: Status;
	CategoryUid    enums.APPLICATION_LIFECYCLE_CATEGORY_UID `protobuf:"varint,22,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	Time           int64                                    `protobuf:"varint,23,opt,name=time,proto3" json:"time,omitempty"`                                                                                                               // Caption: Event Time;
	App            *objects.Product                         `protobuf:"bytes,24,opt,name=app,proto3" json:"app,omitempty"`                                                                                                                  // Caption: Application;
	StatusId       enums.APPLICATION_LIFECYCLE_STATUS_ID    `protobuf:"varint,25,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_STATUS_ID" json:"status_id,omitempty"`             // Caption: Status ID;
	StatusCode     string                                   `protobuf:"bytes,26,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                  // Caption: Status Code;
	TypeUid        enums.APPLICATION_LIFECYCLE_TYPE_UID     `protobuf:"varint,27,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	ClassName      string                                   `protobuf:"bytes,28,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                     // Caption: Class;
	TypeName       string                                   `protobuf:"bytes,29,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                        // Caption: Type Name;
	Message        string                                   `protobuf:"bytes,30,opt,name=message,proto3" json:"message,omitempty"`                                                                                                          // Caption: Message;
	SeverityId     enums.APPLICATION_LIFECYCLE_SEVERITY_ID  `protobuf:"varint,31,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_SEVERITY_ID" json:"severity_id,omitempty"`     // Caption: Severity ID;
}

func (x *ApplicationLifecycle) Reset() {
	*x = ApplicationLifecycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationLifecycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationLifecycle) ProtoMessage() {}

func (x *ApplicationLifecycle) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationLifecycle.ProtoReflect.Descriptor instead.
func (*ApplicationLifecycle) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_0_0_events_application_application_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationLifecycle) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *ApplicationLifecycle) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *ApplicationLifecycle) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ApplicationLifecycle) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ApplicationLifecycle) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *ApplicationLifecycle) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ApplicationLifecycle) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ApplicationLifecycle) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *ApplicationLifecycle) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *ApplicationLifecycle) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ApplicationLifecycle) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ApplicationLifecycle) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ApplicationLifecycle) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *ApplicationLifecycle) GetActivityId() enums.APPLICATION_LIFECYCLE_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.APPLICATION_LIFECYCLE_ACTIVITY_ID(0)
}

func (x *ApplicationLifecycle) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *ApplicationLifecycle) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *ApplicationLifecycle) GetClassUid() enums.APPLICATION_LIFECYCLE_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.APPLICATION_LIFECYCLE_CLASS_UID(0)
}

func (x *ApplicationLifecycle) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ApplicationLifecycle) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ApplicationLifecycle) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ApplicationLifecycle) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApplicationLifecycle) GetCategoryUid() enums.APPLICATION_LIFECYCLE_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.APPLICATION_LIFECYCLE_CATEGORY_UID(0)
}

func (x *ApplicationLifecycle) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ApplicationLifecycle) GetApp() *objects.Product {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *ApplicationLifecycle) GetStatusId() enums.APPLICATION_LIFECYCLE_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.APPLICATION_LIFECYCLE_STATUS_ID(0)
}

func (x *ApplicationLifecycle) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *ApplicationLifecycle) GetTypeUid() enums.APPLICATION_LIFECYCLE_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.APPLICATION_LIFECYCLE_TYPE_UID(0)
}

func (x *ApplicationLifecycle) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *ApplicationLifecycle) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *ApplicationLifecycle) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationLifecycle) GetSeverityId() enums.APPLICATION_LIFECYCLE_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.APPLICATION_LIFECYCLE_SEVERITY_ID(0)
}

// Event: application
// Event UID: 1
// URL: https://schema.ocsf.io/1.0.0/classes/web_resources_activity
type WebResourcesActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message            string                                    `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                                                                                                            // Caption: Message;
	Status             string                                    `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                                                                                                              // Caption: Status;
	Cloud              *objects.Cloud                            `protobuf:"bytes,3,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                                // Caption: Cloud; Profile: cloud;
	StatusCode         string                                    `protobuf:"bytes,4,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                    // Caption: Status Code;
	Enrichments        []*objects.Enrichment                     `protobuf:"bytes,5,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                    // Caption: Enrichments;
	SeverityId         enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID  `protobuf:"varint,6,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`      // Caption: Severity ID;
	Count              int32                                     `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`                                                                                                               // Caption: Count;
	Severity           string                                    `protobuf:"bytes,8,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                          // Caption: Severity;
	StatusDetail       string                                    `protobuf:"bytes,9,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                              // Caption: Status Details;
	RawData            string                                    `protobuf:"bytes,10,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                            // Caption: Raw Data;
	Api                *objects.Api                              `protobuf:"bytes,11,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                   // Caption: API Details; Profile: cloud;
	ClassUid           enums.WEB_RESOURCES_ACTIVITY_CLASS_UID    `protobuf:"varint,12,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	TypeUid            enums.WEB_RESOURCES_ACTIVITY_TYPE_UID     `protobuf:"varint,13,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	Device             *objects.Device                           `protobuf:"bytes,14,opt,name=device,proto3" json:"device,omitempty"`                                                                                                             // Caption: Device; Profile: host;
	Actor              *objects.Actor                            `protobuf:"bytes,15,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                               // Caption: Actor; Profile: host;
	Time               int64                                     `protobuf:"varint,16,opt,name=time,proto3" json:"time,omitempty"`                                                                                                                // Caption: Event Time;
	EndTime            int64                                     `protobuf:"varint,17,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                           // Caption: End Time;
	StatusId           enums.WEB_RESOURCES_ACTIVITY_STATUS_ID    `protobuf:"varint,18,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`             // Caption: Status ID;
	Observables        []*objects.Observable                     `protobuf:"bytes,19,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                   // Caption: Observables;
	SrcEndpoint        *objects.NetworkEndpoint                  `protobuf:"bytes,20,opt,name=src_endpoint,json=srcEndpoint,proto3" json:"src_endpoint,omitempty"`                                                                                // Caption: Source Endpoint;
	ClassName          string                                    `protobuf:"bytes,21,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                      // Caption: Class;
	CategoryUid        enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID `protobuf:"varint,22,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	ActivityId         enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,23,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	DstEndpoint        *objects.NetworkEndpoint                  `protobuf:"bytes,24,opt,name=dst_endpoint,json=dstEndpoint,proto3" json:"dst_endpoint,omitempty"`                                                                                // Caption: Destination Endpoint;
	StartTime          int64                                     `protobuf:"varint,25,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                     // Caption: Start Time;
	WebResources       []*objects.WebResource                    `protobuf:"bytes,26,rep,name=web_resources,json=webResources,proto3" json:"web_resources,omitempty"`                                                                             // Caption: Web Resources;
	Unmapped           *objects.Object                           `protobuf:"bytes,27,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                         // Caption: Unmapped Data;
	CategoryName       string                                    `protobuf:"bytes,28,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                             // Caption: Category;
	WebResourcesResult []*objects.WebResource                    `protobuf:"bytes,29,rep,name=web_resources_result,json=webResourcesResult,proto3" json:"web_resources_result,omitempty"`                                                         // Caption: Web Resources Result;
	TypeName           string                                    `protobuf:"bytes,30,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                         // Caption: Type Name;
	ActivityName       string                                    `protobuf:"bytes,31,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                             // Caption: Activity;
	TimezoneOffset     int32                                     `protobuf:"varint,32,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                      // Caption: Timezone Offset;
	Duration           int32                                     `protobuf:"varint,33,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                        // Caption: Duration;
	Metadata           *objects.Metadata                         `protobuf:"bytes,34,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                         // Caption: Metadata;
}

func (x *WebResourcesActivity) Reset() {
	*x = WebResourcesActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebResourcesActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebResourcesActivity) ProtoMessage() {}

func (x *WebResourcesActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebResourcesActivity.ProtoReflect.Descriptor instead.
func (*WebResourcesActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_0_0_events_application_application_proto_rawDescGZIP(), []int{3}
}

func (x *WebResourcesActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WebResourcesActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WebResourcesActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *WebResourcesActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *WebResourcesActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *WebResourcesActivity) GetSeverityId() enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID(0)
}

func (x *WebResourcesActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WebResourcesActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *WebResourcesActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *WebResourcesActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *WebResourcesActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *WebResourcesActivity) GetClassUid() enums.WEB_RESOURCES_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.WEB_RESOURCES_ACTIVITY_CLASS_UID(0)
}

func (x *WebResourcesActivity) GetTypeUid() enums.WEB_RESOURCES_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.WEB_RESOURCES_ACTIVITY_TYPE_UID(0)
}

func (x *WebResourcesActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *WebResourcesActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *WebResourcesActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *WebResourcesActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WebResourcesActivity) GetStatusId() enums.WEB_RESOURCES_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.WEB_RESOURCES_ACTIVITY_STATUS_ID(0)
}

func (x *WebResourcesActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *WebResourcesActivity) GetSrcEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.SrcEndpoint
	}
	return nil
}

func (x *WebResourcesActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *WebResourcesActivity) GetCategoryUid() enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID(0)
}

func (x *WebResourcesActivity) GetActivityId() enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID(0)
}

func (x *WebResourcesActivity) GetDstEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.DstEndpoint
	}
	return nil
}

func (x *WebResourcesActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *WebResourcesActivity) GetWebResources() []*objects.WebResource {
	if x != nil {
		return x.WebResources
	}
	return nil
}

func (x *WebResourcesActivity) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *WebResourcesActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *WebResourcesActivity) GetWebResourcesResult() []*objects.WebResource {
	if x != nil {
		return x.WebResourcesResult
	}
	return nil
}

func (x *WebResourcesActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *WebResourcesActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *WebResourcesActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *WebResourcesActivity) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *WebResourcesActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Event: application
// Event UID: 3
// URL: https://schema.ocsf.io/1.0.0/classes/api_activity
type ApiActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message        string                          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                                                                                                  // Caption: Message;
	StartTime      int64                           `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                            // Caption: Start Time;
	StatusCode     string                          `protobuf:"bytes,3,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                          // Caption: Status Code;
	Time           int64                           `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`                                                                                                       // Caption: Event Time;
	ClassName      string                          `protobuf:"bytes,5,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                             // Caption: Class;
	TimezoneOffset int32                           `protobuf:"varint,6,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                             // Caption: Timezone Offset;
	SrcEndpoint    *objects.NetworkEndpoint        `protobuf:"bytes,7,opt,name=src_endpoint,json=srcEndpoint,proto3" json:"src_endpoint,omitempty"`                                                                       // Caption: Source Endpoint;
	ClassUid       enums.API_ACTIVITY_CLASS_UID    `protobuf:"varint,8,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_0_0.events.application.enums.API_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`              // Caption: Class ID;
	Api            *objects.Api                    `protobuf:"bytes,9,opt,name=api,proto3" json:"api,omitempty"`                                                                                                          // Caption: API Details;
	Actor          *objects.Actor                  `protobuf:"bytes,10,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                     // Caption: Actor;
	Unmapped       *objects.Object                 `protobuf:"bytes,11,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                               // Caption: Unmapped Data;
	TypeUid        enums.API_ACTIVITY_TYPE_UID     `protobuf:"varint,12,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_0_0.events.application.enums.API_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	CategoryUid    enums.API_ACTIVITY_CATEGORY_UID `protobuf:"varint,13,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_0_0.events.application.enums.API_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	StatusId       enums.API_ACTIVITY_STATUS_ID    `protobuf:"varint,14,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_0_0.events.application.enums.API_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`             // Caption: Status ID;
	ActivityId     enums.API_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,15,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_0_0.events.application.enums.API_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	Metadata       *objects.Metadata               `protobuf:"bytes,16,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                               // Caption: Metadata;
	EndTime        int64                           `protobuf:"varint,17,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                 // Caption: End Time;
	Enrichments    []*objects.Enrichment           `protobuf:"bytes,18,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                         // Caption: Enrichments;
	Cloud          *objects.Cloud                  `protobuf:"bytes,19,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                     // Caption: Cloud; Profile: cloud;
	Observables    []*objects.Observable           `protobuf:"bytes,20,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                         // Caption: Observables;
	SeverityId     enums.API_ACTIVITY_SEVERITY_ID  `protobuf:"varint,21,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_0_0.events.application.enums.API_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`     // Caption: Severity ID;
	CategoryName   string                          `protobuf:"bytes,22,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                   // Caption: Category;
	Resources      []*objects.ResourceDetails      `protobuf:"bytes,23,rep,name=resources,proto3" json:"resources,omitempty"`                                                                                             // Caption: Resources Array;
	RawData        string                          `protobuf:"bytes,24,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                  // Caption: Raw Data;
	Count          int32                           `protobuf:"varint,25,opt,name=count,proto3" json:"count,omitempty"`                                                                                                    // Caption: Count;
	StatusDetail   string                          `protobuf:"bytes,26,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                   // Caption: Status Details;
	Status         string                          `protobuf:"bytes,27,opt,name=status,proto3" json:"status,omitempty"`                                                                                                   // Caption: Status;
	HttpRequest    *objects.HttpRequest            `protobuf:"bytes,28,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`                                                                      // Caption: HTTP Request;
	Duration       int32                           `protobuf:"varint,29,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                              // Caption: Duration;
	TypeName       string                          `protobuf:"bytes,30,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                               // Caption: Type Name;
	ActivityName   string                          `protobuf:"bytes,31,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                   // Caption: Activity;
	Severity       string                          `protobuf:"bytes,32,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                               // Caption: Severity;
	DstEndpoint    *objects.NetworkEndpoint        `protobuf:"bytes,33,opt,name=dst_endpoint,json=dstEndpoint,proto3" json:"dst_endpoint,omitempty"`                                                                      // Caption: Destination Endpoint;
}

func (x *ApiActivity) Reset() {
	*x = ApiActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiActivity) ProtoMessage() {}

func (x *ApiActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_0_0_events_application_application_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiActivity.ProtoReflect.Descriptor instead.
func (*ApiActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_0_0_events_application_application_proto_rawDescGZIP(), []int{4}
}

func (x *ApiActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ApiActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *ApiActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ApiActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *ApiActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *ApiActivity) GetSrcEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.SrcEndpoint
	}
	return nil
}

func (x *ApiActivity) GetClassUid() enums.API_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.API_ACTIVITY_CLASS_UID(0)
}

func (x *ApiActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ApiActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *ApiActivity) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *ApiActivity) GetTypeUid() enums.API_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.API_ACTIVITY_TYPE_UID(0)
}

func (x *ApiActivity) GetCategoryUid() enums.API_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.API_ACTIVITY_CATEGORY_UID(0)
}

func (x *ApiActivity) GetStatusId() enums.API_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.API_ACTIVITY_STATUS_ID(0)
}

func (x *ApiActivity) GetActivityId() enums.API_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.API_ACTIVITY_ACTIVITY_ID(0)
}

func (x *ApiActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ApiActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ApiActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *ApiActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *ApiActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *ApiActivity) GetSeverityId() enums.API_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.API_ACTIVITY_SEVERITY_ID(0)
}

func (x *ApiActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ApiActivity) GetResources() []*objects.ResourceDetails {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ApiActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *ApiActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ApiActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *ApiActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiActivity) GetHttpRequest() *objects.HttpRequest {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

func (x *ApiActivity) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ApiActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *ApiActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ApiActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ApiActivity) GetDstEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.DstEndpoint
	}
	return nil
}

var File_ocsf_v1_0_0_events_application_application_proto protoreflect.FileDescriptor

var file_ocsf_v1_0_0_events_application_application_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x30, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x30, 0x5f,
	0x30, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x0a, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x58,
	0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x08,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x5e, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x41, 0x0a, 0x0b, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x61, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x55, 0x69, 0x64, 0x12, 0x55, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50,
	0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49,
	0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45,
	0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xce, 0x0f, 0x0a, 0x19,
	0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x6f, 0x0a, 0x0b, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x68,
	0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a,
	0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03,
	0x61, 0x70, 0x69, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x72, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0b, 0x73, 0x72, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61,
	0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x6c, 0x73, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x66,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12,
	0x33, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x68,
	0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x45, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x57, 0x65, 0x62,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x77, 0x65, 0x62, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x72, 0x0a,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f,
	0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69,
	0x64, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x12, 0x69, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45,
	0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x69,
	0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x4c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52,
	0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0xcd, 0x0c, 0x0a,
	0x14, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x30,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x65,
	0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x68,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f,
	0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x62, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43, 0x59,
	0x43, 0x4c, 0x45, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x08, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6b, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c,
	0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f,
	0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x62, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46,
	0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5f, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41,
	0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43,
	0x59, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44,
	0x52, 0x0a, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xd0, 0x0e, 0x0a,
	0x14, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x69, 0x0a,
	0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x48, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70,
	0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70,
	0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x63, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49,
	0x44, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x60, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x33, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x63, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45,
	0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b,
	0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x73,
	0x72, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x6c, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69,
	0x64, 0x12, 0x69, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45,
	0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0c,
	0x64, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x73, 0x74, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x77,
	0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x75,
	0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x77, 0x65, 0x62,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x77, 0x65, 0x62, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc4, 0x0d, 0x0a, 0x0b, 0x41, 0x70, 0x69, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x72, 0x63, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x59,
	0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52,
	0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69,
	0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x12, 0x56, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52,
	0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x62, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x59, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41,
	0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f,
	0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f,
	0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43,
	0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a,
	0x0c, 0x64, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f,
	0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x73, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x91, 0x02, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61,
	0x6c, 0x6c, 0x6c, 0x61, 0x62, 0x68, 0x2f, 0x6f, 0x63, 0x73, 0x66, 0x2d, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76,
	0x31, 0x5f, 0x30, 0x5f, 0x30, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa2, 0x02, 0x04, 0x4f, 0x56, 0x45, 0x41, 0xaa,
	0x02, 0x1c, 0x4f, 0x63, 0x73, 0x66, 0x2e, 0x56, 0x31, 0x30, 0x30, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0x02,
	0x1c, 0x4f, 0x63, 0x73, 0x66, 0x5c, 0x56, 0x31, 0x30, 0x30, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x5c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xe2, 0x02, 0x28,
	0x4f, 0x63, 0x73, 0x66, 0x5c, 0x56, 0x31, 0x30, 0x30, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x5c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x4f, 0x63, 0x73, 0x66, 0x3a,
	0x3a, 0x56, 0x31, 0x30, 0x30, 0x3a, 0x3a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ocsf_v1_0_0_events_application_application_proto_rawDescOnce sync.Once
	file_ocsf_v1_0_0_events_application_application_proto_rawDescData = file_ocsf_v1_0_0_events_application_application_proto_rawDesc
)

func file_ocsf_v1_0_0_events_application_application_proto_rawDescGZIP() []byte {
	file_ocsf_v1_0_0_events_application_application_proto_rawDescOnce.Do(func() {
		file_ocsf_v1_0_0_events_application_application_proto_rawDescData = protoimpl.X.CompressGZIP(file_ocsf_v1_0_0_events_application_application_proto_rawDescData)
	})
	return file_ocsf_v1_0_0_events_application_application_proto_rawDescData
}

var file_ocsf_v1_0_0_events_application_application_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ocsf_v1_0_0_events_application_application_proto_goTypes = []interface{}{
	(*Application)(nil),                                  // 0: ocsf.v1_0_0.events.application.Application
	(*WebResourceAccessActivity)(nil),                    // 1: ocsf.v1_0_0.events.application.WebResourceAccessActivity
	(*ApplicationLifecycle)(nil),                         // 2: ocsf.v1_0_0.events.application.ApplicationLifecycle
	(*WebResourcesActivity)(nil),                         // 3: ocsf.v1_0_0.events.application.WebResourcesActivity
	(*ApiActivity)(nil),                                  // 4: ocsf.v1_0_0.events.application.ApiActivity
	(enums.APPLICATION_STATUS_ID)(0),                     // 5: ocsf.v1_0_0.events.application.enums.APPLICATION_STATUS_ID
	(*objects.Object)(nil),                               // 6: ocsf.v1_0_0.objects.Object
	(enums.APPLICATION_ACTIVITY_ID)(0),                   // 7: ocsf.v1_0_0.events.application.enums.APPLICATION_ACTIVITY_ID
	(enums.APPLICATION_CLASS_UID)(0),                     // 8: ocsf.v1_0_0.events.application.enums.APPLICATION_CLASS_UID
	(enums.APPLICATION_SEVERITY_ID)(0),                   // 9: ocsf.v1_0_0.events.application.enums.APPLICATION_SEVERITY_ID
	(*objects.Api)(nil),                                  // 10: ocsf.v1_0_0.objects.Api
	(*objects.Observable)(nil),                           // 11: ocsf.v1_0_0.objects.Observable
	(enums.APPLICATION_CATEGORY_UID)(0),                  // 12: ocsf.v1_0_0.events.application.enums.APPLICATION_CATEGORY_UID
	(enums.APPLICATION_TYPE_UID)(0),                      // 13: ocsf.v1_0_0.events.application.enums.APPLICATION_TYPE_UID
	(*objects.Metadata)(nil),                             // 14: ocsf.v1_0_0.objects.Metadata
	(*objects.Enrichment)(nil),                           // 15: ocsf.v1_0_0.objects.Enrichment
	(*objects.Cloud)(nil),                                // 16: ocsf.v1_0_0.objects.Cloud
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID)(0),  // 17: ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID
	(*objects.HttpResponse)(nil),                         // 18: ocsf.v1_0_0.objects.HttpResponse
	(*objects.Actor)(nil),                                // 19: ocsf.v1_0_0.objects.Actor
	(*objects.NetworkEndpoint)(nil),                      // 20: ocsf.v1_0_0.objects.NetworkEndpoint
	(*objects.Tls)(nil),                                  // 21: ocsf.v1_0_0.objects.Tls
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID)(0),     // 22: ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID
	(*objects.NetworkProxy)(nil),                         // 23: ocsf.v1_0_0.objects.NetworkProxy
	(*objects.Device)(nil),                               // 24: ocsf.v1_0_0.objects.Device
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID)(0),  // 25: ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID
	(*objects.HttpRequest)(nil),                          // 26: ocsf.v1_0_0.objects.HttpRequest
	(*objects.WebResource)(nil),                          // 27: ocsf.v1_0_0.objects.WebResource
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID)(0), // 28: ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID)(0),    // 29: ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID)(0),    // 30: ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID
	(enums.APPLICATION_LIFECYCLE_ACTIVITY_ID)(0),         // 31: ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_ACTIVITY_ID
	(enums.APPLICATION_LIFECYCLE_CLASS_UID)(0),           // 32: ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_CLASS_UID
	(enums.APPLICATION_LIFECYCLE_CATEGORY_UID)(0),        // 33: ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_CATEGORY_UID
	(*objects.Product)(nil),                              // 34: ocsf.v1_0_0.objects.Product
	(enums.APPLICATION_LIFECYCLE_STATUS_ID)(0),           // 35: ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_STATUS_ID
	(enums.APPLICATION_LIFECYCLE_TYPE_UID)(0),            // 36: ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_TYPE_UID
	(enums.APPLICATION_LIFECYCLE_SEVERITY_ID)(0),         // 37: ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_SEVERITY_ID
	(enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID)(0),        // 38: ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID
	(enums.WEB_RESOURCES_ACTIVITY_CLASS_UID)(0),          // 39: ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CLASS_UID
	(enums.WEB_RESOURCES_ACTIVITY_TYPE_UID)(0),           // 40: ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_TYPE_UID
	(enums.WEB_RESOURCES_ACTIVITY_STATUS_ID)(0),          // 41: ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_STATUS_ID
	(enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID)(0),       // 42: ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID
	(enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID)(0),        // 43: ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID
	(enums.API_ACTIVITY_CLASS_UID)(0),                    // 44: ocsf.v1_0_0.events.application.enums.API_ACTIVITY_CLASS_UID
	(enums.API_ACTIVITY_TYPE_UID)(0),                     // 45: ocsf.v1_0_0.events.application.enums.API_ACTIVITY_TYPE_UID
	(enums.API_ACTIVITY_CATEGORY_UID)(0),                 // 46: ocsf.v1_0_0.events.application.enums.API_ACTIVITY_CATEGORY_UID
	(enums.API_ACTIVITY_STATUS_ID)(0),                    // 47: ocsf.v1_0_0.events.application.enums.API_ACTIVITY_STATUS_ID
	(enums.API_ACTIVITY_ACTIVITY_ID)(0),                  // 48: ocsf.v1_0_0.events.application.enums.API_ACTIVITY_ACTIVITY_ID
	(enums.API_ACTIVITY_SEVERITY_ID)(0),                  // 49: ocsf.v1_0_0.events.application.enums.API_ACTIVITY_SEVERITY_ID
	(*objects.ResourceDetails)(nil),                      // 50: ocsf.v1_0_0.objects.ResourceDetails
}
var file_ocsf_v1_0_0_events_application_application_proto_depIdxs = []int32{
	5,  // 0: ocsf.v1_0_0.events.application.Application.status_id:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_STATUS_ID
	6,  // 1: ocsf.v1_0_0.events.application.Application.unmapped:type_name -> ocsf.v1_0_0.objects.Object
	7,  // 2: ocsf.v1_0_0.events.application.Application.activity_id:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_ACTIVITY_ID
	8,  // 3: ocsf.v1_0_0.events.application.Application.class_uid:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_CLASS_UID
	9,  // 4: ocsf.v1_0_0.events.application.Application.severity_id:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_SEVERITY_ID
	10, // 5: ocsf.v1_0_0.events.application.Application.api:type_name -> ocsf.v1_0_0.objects.Api
	11, // 6: ocsf.v1_0_0.events.application.Application.observables:type_name -> ocsf.v1_0_0.objects.Observable
	12, // 7: ocsf.v1_0_0.events.application.Application.category_uid:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_CATEGORY_UID
	13, // 8: ocsf.v1_0_0.events.application.Application.type_uid:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_TYPE_UID
	14, // 9: ocsf.v1_0_0.events.application.Application.metadata:type_name -> ocsf.v1_0_0.objects.Metadata
	15, // 10: ocsf.v1_0_0.events.application.Application.enrichments:type_name -> ocsf.v1_0_0.objects.Enrichment
	16, // 11: ocsf.v1_0_0.events.application.Application.cloud:type_name -> ocsf.v1_0_0.objects.Cloud
	17, // 12: ocsf.v1_0_0.events.application.WebResourceAccessActivity.severity_id:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID
	6,  // 13: ocsf.v1_0_0.events.application.WebResourceAccessActivity.unmapped:type_name -> ocsf.v1_0_0.objects.Object
	18, // 14: ocsf.v1_0_0.events.application.WebResourceAccessActivity.http_response:type_name -> ocsf.v1_0_0.objects.HttpResponse
	19, // 15: ocsf.v1_0_0.events.application.WebResourceAccessActivity.actor:type_name -> ocsf.v1_0_0.objects.Actor
	15, // 16: ocsf.v1_0_0.events.application.WebResourceAccessActivity.enrichments:type_name -> ocsf.v1_0_0.objects.Enrichment
	10, // 17: ocsf.v1_0_0.events.application.WebResourceAccessActivity.api:type_name -> ocsf.v1_0_0.objects.Api
	20, // 18: ocsf.v1_0_0.events.application.WebResourceAccessActivity.src_endpoint:type_name -> ocsf.v1_0_0.objects.NetworkEndpoint
	21, // 19: ocsf.v1_0_0.events.application.WebResourceAccessActivity.tls:type_name -> ocsf.v1_0_0.objects.Tls
	22, // 20: ocsf.v1_0_0.events.application.WebResourceAccessActivity.type_uid:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID
	23, // 21: ocsf.v1_0_0.events.application.WebResourceAccessActivity.proxy:type_name -> ocsf.v1_0_0.objects.NetworkProxy
	24, // 22: ocsf.v1_0_0.events.application.WebResourceAccessActivity.device:type_name -> ocsf.v1_0_0.objects.Device
	25, // 23: ocsf.v1_0_0.events.application.WebResourceAccessActivity.activity_id:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID
	26, // 24: ocsf.v1_0_0.events.application.WebResourceAccessActivity.http_request:type_name -> ocsf.v1_0_0.objects.HttpRequest
	27, // 25: ocsf.v1_0_0.events.application.WebResourceAccessActivity.web_resources:type_name -> ocsf.v1_0_0.objects.WebResource
	14, // 26: ocsf.v1_0_0.events.application.WebResourceAccessActivity.metadata:type_name -> ocsf.v1_0_0.objects.Metadata
	28, // 27: ocsf.v1_0_0.events.application.WebResourceAccessActivity.category_uid:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID
	16, // 28: ocsf.v1_0_0.events.application.WebResourceAccessActivity.cloud:type_name -> ocsf.v1_0_0.objects.Cloud
	29, // 29: ocsf.v1_0_0.events.application.WebResourceAccessActivity.status_id:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID
	30, // 30: ocsf.v1_0_0.events.application.WebResourceAccessActivity.class_uid:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID
	11, // 31: ocsf.v1_0_0.events.application.WebResourceAccessActivity.observables:type_name -> ocsf.v1_0_0.objects.Observable
	6,  // 32: ocsf.v1_0_0.events.application.ApplicationLifecycle.unmapped:type_name -> ocsf.v1_0_0.objects.Object
	10, // 33: ocsf.v1_0_0.events.application.ApplicationLifecycle.api:type_name -> ocsf.v1_0_0.objects.Api
	16, // 34: ocsf.v1_0_0.events.application.ApplicationLifecycle.cloud:type_name -> ocsf.v1_0_0.objects.Cloud
	24, // 35: ocsf.v1_0_0.events.application.ApplicationLifecycle.device:type_name -> ocsf.v1_0_0.objects.Device
	11, // 36: ocsf.v1_0_0.events.application.ApplicationLifecycle.observables:type_name -> ocsf.v1_0_0.objects.Observable
	14, // 37: ocsf.v1_0_0.events.application.ApplicationLifecycle.metadata:type_name -> ocsf.v1_0_0.objects.Metadata
	15, // 38: ocsf.v1_0_0.events.application.ApplicationLifecycle.enrichments:type_name -> ocsf.v1_0_0.objects.Enrichment
	31, // 39: ocsf.v1_0_0.events.application.ApplicationLifecycle.activity_id:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_ACTIVITY_ID
	19, // 40: ocsf.v1_0_0.events.application.ApplicationLifecycle.actor:type_name -> ocsf.v1_0_0.objects.Actor
	32, // 41: ocsf.v1_0_0.events.application.ApplicationLifecycle.class_uid:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_CLASS_UID
	33, // 42: ocsf.v1_0_0.events.application.ApplicationLifecycle.category_uid:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_CATEGORY_UID
	34, // 43: ocsf.v1_0_0.events.application.ApplicationLifecycle.app:type_name -> ocsf.v1_0_0.objects.Product
	35, // 44: ocsf.v1_0_0.events.application.ApplicationLifecycle.status_id:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_STATUS_ID
	36, // 45: ocsf.v1_0_0.events.application.ApplicationLifecycle.type_uid:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_TYPE_UID
	37, // 46: ocsf.v1_0_0.events.application.ApplicationLifecycle.severity_id:type_name -> ocsf.v1_0_0.events.application.enums.APPLICATION_LIFECYCLE_SEVERITY_ID
	16, // 47: ocsf.v1_0_0.events.application.WebResourcesActivity.cloud:type_name -> ocsf.v1_0_0.objects.Cloud
	15, // 48: ocsf.v1_0_0.events.application.WebResourcesActivity.enrichments:type_name -> ocsf.v1_0_0.objects.Enrichment
	38, // 49: ocsf.v1_0_0.events.application.WebResourcesActivity.severity_id:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID
	10, // 50: ocsf.v1_0_0.events.application.WebResourcesActivity.api:type_name -> ocsf.v1_0_0.objects.Api
	39, // 51: ocsf.v1_0_0.events.application.WebResourcesActivity.class_uid:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CLASS_UID
	40, // 52: ocsf.v1_0_0.events.application.WebResourcesActivity.type_uid:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_TYPE_UID
	24, // 53: ocsf.v1_0_0.events.application.WebResourcesActivity.device:type_name -> ocsf.v1_0_0.objects.Device
	19, // 54: ocsf.v1_0_0.events.application.WebResourcesActivity.actor:type_name -> ocsf.v1_0_0.objects.Actor
	41, // 55: ocsf.v1_0_0.events.application.WebResourcesActivity.status_id:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_STATUS_ID
	11, // 56: ocsf.v1_0_0.events.application.WebResourcesActivity.observables:type_name -> ocsf.v1_0_0.objects.Observable
	20, // 57: ocsf.v1_0_0.events.application.WebResourcesActivity.src_endpoint:type_name -> ocsf.v1_0_0.objects.NetworkEndpoint
	42, // 58: ocsf.v1_0_0.events.application.WebResourcesActivity.category_uid:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID
	43, // 59: ocsf.v1_0_0.events.application.WebResourcesActivity.activity_id:type_name -> ocsf.v1_0_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID
	20, // 60: ocsf.v1_0_0.events.application.WebResourcesActivity.dst_endpoint:type_name -> ocsf.v1_0_0.objects.NetworkEndpoint
	27, // 61: ocsf.v1_0_0.events.application.WebResourcesActivity.web_resources:type_name -> ocsf.v1_0_0.objects.WebResource
	6,  // 62: ocsf.v1_0_0.events.application.WebResourcesActivity.unmapped:type_name -> ocsf.v1_0_0.objects.Object
	27, // 63: ocsf.v1_0_0.events.application.WebResourcesActivity.web_resources_result:type_name -> ocsf.v1_0_0.objects.WebResource
	14, // 64: ocsf.v1_0_0.events.application.WebResourcesActivity.metadata:type_name -> ocsf.v1_0_0.objects.Metadata
	20, // 65: ocsf.v1_0_0.events.application.ApiActivity.src_endpoint:type_name -> ocsf.v1_0_0.objects.NetworkEndpoint
	44, // 66: ocsf.v1_0_0.events.application.ApiActivity.class_uid:type_name -> ocsf.v1_0_0.events.application.enums.API_ACTIVITY_CLASS_UID
	10, // 67: ocsf.v1_0_0.events.application.ApiActivity.api:type_name -> ocsf.v1_0_0.objects.Api
	19, // 68: ocsf.v1_0_0.events.application.ApiActivity.actor:type_name -> ocsf.v1_0_0.objects.Actor
	6,  // 69: ocsf.v1_0_0.events.application.ApiActivity.unmapped:type_name -> ocsf.v1_0_0.objects.Object
	45, // 70: ocsf.v1_0_0.events.application.ApiActivity.type_uid:type_name -> ocsf.v1_0_0.events.application.enums.API_ACTIVITY_TYPE_UID
	46, // 71: ocsf.v1_0_0.events.application.ApiActivity.category_uid:type_name -> ocsf.v1_0_0.events.application.enums.API_ACTIVITY_CATEGORY_UID
	47, // 72: ocsf.v1_0_0.events.application.ApiActivity.status_id:type_name -> ocsf.v1_0_0.events.application.enums.API_ACTIVITY_STATUS_ID
	48, // 73: ocsf.v1_0_0.events.application.ApiActivity.activity_id:type_name -> ocsf.v1_0_0.events.application.enums.API_ACTIVITY_ACTIVITY_ID
	14, // 74: ocsf.v1_0_0.events.application.ApiActivity.metadata:type_name -> ocsf.v1_0_0.objects.Metadata
	15, // 75: ocsf.v1_0_0.events.application.ApiActivity.enrichments:type_name -> ocsf.v1_0_0.objects.Enrichment
	16, // 76: ocsf.v1_0_0.events.application.ApiActivity.cloud:type_name -> ocsf.v1_0_0.objects.Cloud
	11, // 77: ocsf.v1_0_0.events.application.ApiActivity.observables:type_name -> ocsf.v1_0_0.objects.Observable
	49, // 78: ocsf.v1_0_0.events.application.ApiActivity.severity_id:type_name -> ocsf.v1_0_0.events.application.enums.API_ACTIVITY_SEVERITY_ID
	50, // 79: ocsf.v1_0_0.events.application.ApiActivity.resources:type_name -> ocsf.v1_0_0.objects.ResourceDetails
	26, // 80: ocsf.v1_0_0.events.application.ApiActivity.http_request:type_name -> ocsf.v1_0_0.objects.HttpRequest
	20, // 81: ocsf.v1_0_0.events.application.ApiActivity.dst_endpoint:type_name -> ocsf.v1_0_0.objects.NetworkEndpoint
	82, // [82:82] is the sub-list for method output_type
	82, // [82:82] is the sub-list for method input_type
	82, // [82:82] is the sub-list for extension type_name
	82, // [82:82] is the sub-list for extension extendee
	0,  // [0:82] is the sub-list for field type_name
}

func init() { file_ocsf_v1_0_0_events_application_application_proto_init() }
func file_ocsf_v1_0_0_events_application_application_proto_init() {
	if File_ocsf_v1_0_0_events_application_application_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ocsf_v1_0_0_events_application_application_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_0_0_events_application_application_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebResourceAccessActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_0_0_events_application_application_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationLifecycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_0_0_events_application_application_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebResourcesActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_0_0_events_application_application_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ocsf_v1_0_0_events_application_application_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ocsf_v1_0_0_events_application_application_proto_goTypes,
		DependencyIndexes: file_ocsf_v1_0_0_events_application_application_proto_depIdxs,
		MessageInfos:      file_ocsf_v1_0_0_events_application_application_proto_msgTypes,
	}.Build()
	File_ocsf_v1_0_0_events_application_application_proto = out.File
	file_ocsf_v1_0_0_events_application_application_proto_rawDesc = nil
	file_ocsf_v1_0_0_events_application_application_proto_goTypes = nil
	file_ocsf_v1_0_0_events_application_application_proto_depIdxs = nil
}

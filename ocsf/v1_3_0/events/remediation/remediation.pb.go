// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: ocsf/v1_3_0/events/remediation/remediation.proto

package remediation

import (
	enums "github.com/valllabh/ocsf-schema-golang/ocsf/v1_3_0/events/remediation/enums"
	objects "github.com/valllabh/ocsf-schema-golang/ocsf/v1_3_0/objects"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// URL: https://schema.ocsf.io/1.3.0/classes/file_remediation_activity
// Event: remediation
// Event UID: 2
type FileRemediationActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      enums.FILE_REMEDIATION_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	ActivityName    string                                       `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                                // Caption: Activity;
	Actor           *objects.Actor                               `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                                  // Caption: Actor; Profile: host;
	Api             *objects.Api                                 `protobuf:"bytes,4,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                      // Caption: API Details; Profile: cloud;
	CategoryName    string                                       `protobuf:"bytes,5,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                                // Caption: Category;
	CategoryUid     enums.FILE_REMEDIATION_ACTIVITY_CATEGORY_UID `protobuf:"varint,6,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	ClassName       string                                       `protobuf:"bytes,7,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                         // Caption: Class;
	ClassUid        enums.FILE_REMEDIATION_ACTIVITY_CLASS_UID    `protobuf:"varint,8,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	Cloud           *objects.Cloud                               `protobuf:"bytes,9,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                                  // Caption: Cloud; Profile: cloud;
	CommandUid      string                                       `protobuf:"bytes,10,opt,name=command_uid,json=commandUid,proto3" json:"command_uid,omitempty"`                                                                                     // Caption: Command UID;
	Count           int32                                        `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`                                                                                                                // Caption: Count;
	Countermeasures []*objects.D3Fend                            `protobuf:"bytes,12,rep,name=countermeasures,proto3" json:"countermeasures,omitempty"`                                                                                             // Caption: Countermeasures;
	Device          *objects.Device                              `protobuf:"bytes,13,opt,name=device,proto3" json:"device,omitempty"`                                                                                                               // Profile: host; Caption: Device;
	Duration        int64                                        `protobuf:"varint,14,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                          // Caption: Duration Milliseconds;
	EndTime         int64                                        `protobuf:"varint,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                             // Caption: End Time;
	Enrichments     []*objects.Enrichment                        `protobuf:"bytes,16,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                     // Caption: Enrichments;
	File            *objects.File                                `protobuf:"bytes,17,opt,name=file,proto3" json:"file,omitempty"`                                                                                                                   // Caption: File;
	Message         string                                       `protobuf:"bytes,18,opt,name=message,proto3" json:"message,omitempty"`                                                                                                             // Caption: Message;
	Metadata        *objects.Metadata                            `protobuf:"bytes,19,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                           // Caption: Metadata;
	Observables     []*objects.Observable                        `protobuf:"bytes,20,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                     // Caption: Observables;
	Osint           []*objects.Osint                             `protobuf:"bytes,21,rep,name=osint,proto3" json:"osint,omitempty"`                                                                                                                 // Caption: OSINT; Profile: osint;
	RawData         string                                       `protobuf:"bytes,22,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                              // Caption: Raw Data;
	Remediation     *objects.Remediation                         `protobuf:"bytes,23,opt,name=remediation,proto3" json:"remediation,omitempty"`                                                                                                     // Caption: Remediation Guidance;
	Scan            *objects.Scan                                `protobuf:"bytes,24,opt,name=scan,proto3" json:"scan,omitempty"`                                                                                                                   // Caption: Scan;
	Severity        string                                       `protobuf:"bytes,25,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                           // Caption: Severity;
	SeverityId      enums.FILE_REMEDIATION_ACTIVITY_SEVERITY_ID  `protobuf:"varint,26,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`    // Caption: Severity ID;
	StartTime       int64                                        `protobuf:"varint,27,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                       // Caption: Start Time;
	Status          string                                       `protobuf:"bytes,28,opt,name=status,proto3" json:"status,omitempty"`                                                                                                               // Caption: Status;
	StatusCode      string                                       `protobuf:"bytes,29,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                     // Caption: Status Code;
	StatusDetail    string                                       `protobuf:"bytes,30,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                               // Caption: Status Detail;
	StatusId        enums.FILE_REMEDIATION_ACTIVITY_STATUS_ID    `protobuf:"varint,31,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`            // Caption: Status ID;
	Time            int64                                        `protobuf:"varint,32,opt,name=time,proto3" json:"time,omitempty"`                                                                                                                  // Caption: Event Time;
	TimezoneOffset  int32                                        `protobuf:"varint,33,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                        // Caption: Timezone Offset;
	TypeName        string                                       `protobuf:"bytes,34,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                           // Caption: Type Name;
	TypeUid         enums.FILE_REMEDIATION_ACTIVITY_TYPE_UID     `protobuf:"varint,35,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                // Caption: Type ID;
	Unmapped        *structpb.Struct                             `protobuf:"bytes,36,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                           // Caption: Unmapped Data;
}

func (x *FileRemediationActivity) Reset() {
	*x = FileRemediationActivity{}
	mi := &file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileRemediationActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRemediationActivity) ProtoMessage() {}

func (x *FileRemediationActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRemediationActivity.ProtoReflect.Descriptor instead.
func (*FileRemediationActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescGZIP(), []int{0}
}

func (x *FileRemediationActivity) GetActivityId() enums.FILE_REMEDIATION_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.FILE_REMEDIATION_ACTIVITY_ACTIVITY_ID(0)
}

func (x *FileRemediationActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *FileRemediationActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *FileRemediationActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *FileRemediationActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *FileRemediationActivity) GetCategoryUid() enums.FILE_REMEDIATION_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.FILE_REMEDIATION_ACTIVITY_CATEGORY_UID(0)
}

func (x *FileRemediationActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *FileRemediationActivity) GetClassUid() enums.FILE_REMEDIATION_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.FILE_REMEDIATION_ACTIVITY_CLASS_UID(0)
}

func (x *FileRemediationActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *FileRemediationActivity) GetCommandUid() string {
	if x != nil {
		return x.CommandUid
	}
	return ""
}

func (x *FileRemediationActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FileRemediationActivity) GetCountermeasures() []*objects.D3Fend {
	if x != nil {
		return x.Countermeasures
	}
	return nil
}

func (x *FileRemediationActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *FileRemediationActivity) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FileRemediationActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *FileRemediationActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *FileRemediationActivity) GetFile() *objects.File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileRemediationActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileRemediationActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FileRemediationActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *FileRemediationActivity) GetOsint() []*objects.Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

func (x *FileRemediationActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *FileRemediationActivity) GetRemediation() *objects.Remediation {
	if x != nil {
		return x.Remediation
	}
	return nil
}

func (x *FileRemediationActivity) GetScan() *objects.Scan {
	if x != nil {
		return x.Scan
	}
	return nil
}

func (x *FileRemediationActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *FileRemediationActivity) GetSeverityId() enums.FILE_REMEDIATION_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.FILE_REMEDIATION_ACTIVITY_SEVERITY_ID(0)
}

func (x *FileRemediationActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FileRemediationActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileRemediationActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *FileRemediationActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *FileRemediationActivity) GetStatusId() enums.FILE_REMEDIATION_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.FILE_REMEDIATION_ACTIVITY_STATUS_ID(0)
}

func (x *FileRemediationActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *FileRemediationActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *FileRemediationActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *FileRemediationActivity) GetTypeUid() enums.FILE_REMEDIATION_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.FILE_REMEDIATION_ACTIVITY_TYPE_UID(0)
}

func (x *FileRemediationActivity) GetUnmapped() *structpb.Struct {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

// Event UID: 4
// URL: https://schema.ocsf.io/1.3.0/classes/network_remediation_activity
// Event: remediation
type NetworkRemediationActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      enums.NETWORK_REMEDIATION_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	ActivityName    string                                          `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                                   // Caption: Activity;
	Actor           *objects.Actor                                  `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                                     // Caption: Actor; Profile: host;
	Api             *objects.Api                                    `protobuf:"bytes,4,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                         // Caption: API Details; Profile: cloud;
	CategoryName    string                                          `protobuf:"bytes,5,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                                   // Caption: Category;
	CategoryUid     enums.NETWORK_REMEDIATION_ACTIVITY_CATEGORY_UID `protobuf:"varint,6,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	ClassName       string                                          `protobuf:"bytes,7,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                            // Caption: Class;
	ClassUid        enums.NETWORK_REMEDIATION_ACTIVITY_CLASS_UID    `protobuf:"varint,8,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	Cloud           *objects.Cloud                                  `protobuf:"bytes,9,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                                     // Caption: Cloud; Profile: cloud;
	CommandUid      string                                          `protobuf:"bytes,10,opt,name=command_uid,json=commandUid,proto3" json:"command_uid,omitempty"`                                                                                        // Caption: Command UID;
	ConnectionInfo  *objects.NetworkConnectionInfo                  `protobuf:"bytes,11,opt,name=connection_info,json=connectionInfo,proto3" json:"connection_info,omitempty"`                                                                            // Caption: Connection Info;
	Count           int32                                           `protobuf:"varint,12,opt,name=count,proto3" json:"count,omitempty"`                                                                                                                   // Caption: Count;
	Countermeasures []*objects.D3Fend                               `protobuf:"bytes,13,rep,name=countermeasures,proto3" json:"countermeasures,omitempty"`                                                                                                // Caption: Countermeasures;
	Device          *objects.Device                                 `protobuf:"bytes,14,opt,name=device,proto3" json:"device,omitempty"`                                                                                                                  // Caption: Device; Profile: host;
	Duration        int64                                           `protobuf:"varint,15,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                             // Caption: Duration Milliseconds;
	EndTime         int64                                           `protobuf:"varint,16,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                                // Caption: End Time;
	Enrichments     []*objects.Enrichment                           `protobuf:"bytes,17,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                        // Caption: Enrichments;
	Message         string                                          `protobuf:"bytes,18,opt,name=message,proto3" json:"message,omitempty"`                                                                                                                // Caption: Message;
	Metadata        *objects.Metadata                               `protobuf:"bytes,19,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                              // Caption: Metadata;
	Observables     []*objects.Observable                           `protobuf:"bytes,20,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                        // Caption: Observables;
	Osint           []*objects.Osint                                `protobuf:"bytes,21,rep,name=osint,proto3" json:"osint,omitempty"`                                                                                                                    // Caption: OSINT; Profile: osint;
	RawData         string                                          `protobuf:"bytes,22,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                                 // Caption: Raw Data;
	Remediation     *objects.Remediation                            `protobuf:"bytes,23,opt,name=remediation,proto3" json:"remediation,omitempty"`                                                                                                        // Caption: Remediation Guidance;
	Scan            *objects.Scan                                   `protobuf:"bytes,24,opt,name=scan,proto3" json:"scan,omitempty"`                                                                                                                      // Caption: Scan;
	Severity        string                                          `protobuf:"bytes,25,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                              // Caption: Severity;
	SeverityId      enums.NETWORK_REMEDIATION_ACTIVITY_SEVERITY_ID  `protobuf:"varint,26,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`    // Caption: Severity ID;
	StartTime       int64                                           `protobuf:"varint,27,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                          // Caption: Start Time;
	Status          string                                          `protobuf:"bytes,28,opt,name=status,proto3" json:"status,omitempty"`                                                                                                                  // Caption: Status;
	StatusCode      string                                          `protobuf:"bytes,29,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                        // Caption: Status Code;
	StatusDetail    string                                          `protobuf:"bytes,30,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                                  // Caption: Status Detail;
	StatusId        enums.NETWORK_REMEDIATION_ACTIVITY_STATUS_ID    `protobuf:"varint,31,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`            // Caption: Status ID;
	Time            int64                                           `protobuf:"varint,32,opt,name=time,proto3" json:"time,omitempty"`                                                                                                                     // Caption: Event Time;
	TimezoneOffset  int32                                           `protobuf:"varint,33,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                           // Caption: Timezone Offset;
	TypeName        string                                          `protobuf:"bytes,34,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                              // Caption: Type Name;
	TypeUid         enums.NETWORK_REMEDIATION_ACTIVITY_TYPE_UID     `protobuf:"varint,35,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                // Caption: Type ID;
	Unmapped        *structpb.Struct                                `protobuf:"bytes,36,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                              // Caption: Unmapped Data;
}

func (x *NetworkRemediationActivity) Reset() {
	*x = NetworkRemediationActivity{}
	mi := &file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkRemediationActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkRemediationActivity) ProtoMessage() {}

func (x *NetworkRemediationActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkRemediationActivity.ProtoReflect.Descriptor instead.
func (*NetworkRemediationActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkRemediationActivity) GetActivityId() enums.NETWORK_REMEDIATION_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.NETWORK_REMEDIATION_ACTIVITY_ACTIVITY_ID(0)
}

func (x *NetworkRemediationActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *NetworkRemediationActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *NetworkRemediationActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *NetworkRemediationActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *NetworkRemediationActivity) GetCategoryUid() enums.NETWORK_REMEDIATION_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.NETWORK_REMEDIATION_ACTIVITY_CATEGORY_UID(0)
}

func (x *NetworkRemediationActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *NetworkRemediationActivity) GetClassUid() enums.NETWORK_REMEDIATION_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.NETWORK_REMEDIATION_ACTIVITY_CLASS_UID(0)
}

func (x *NetworkRemediationActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *NetworkRemediationActivity) GetCommandUid() string {
	if x != nil {
		return x.CommandUid
	}
	return ""
}

func (x *NetworkRemediationActivity) GetConnectionInfo() *objects.NetworkConnectionInfo {
	if x != nil {
		return x.ConnectionInfo
	}
	return nil
}

func (x *NetworkRemediationActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NetworkRemediationActivity) GetCountermeasures() []*objects.D3Fend {
	if x != nil {
		return x.Countermeasures
	}
	return nil
}

func (x *NetworkRemediationActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *NetworkRemediationActivity) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *NetworkRemediationActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *NetworkRemediationActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *NetworkRemediationActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NetworkRemediationActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *NetworkRemediationActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *NetworkRemediationActivity) GetOsint() []*objects.Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

func (x *NetworkRemediationActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *NetworkRemediationActivity) GetRemediation() *objects.Remediation {
	if x != nil {
		return x.Remediation
	}
	return nil
}

func (x *NetworkRemediationActivity) GetScan() *objects.Scan {
	if x != nil {
		return x.Scan
	}
	return nil
}

func (x *NetworkRemediationActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *NetworkRemediationActivity) GetSeverityId() enums.NETWORK_REMEDIATION_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.NETWORK_REMEDIATION_ACTIVITY_SEVERITY_ID(0)
}

func (x *NetworkRemediationActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *NetworkRemediationActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkRemediationActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *NetworkRemediationActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *NetworkRemediationActivity) GetStatusId() enums.NETWORK_REMEDIATION_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.NETWORK_REMEDIATION_ACTIVITY_STATUS_ID(0)
}

func (x *NetworkRemediationActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *NetworkRemediationActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *NetworkRemediationActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *NetworkRemediationActivity) GetTypeUid() enums.NETWORK_REMEDIATION_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.NETWORK_REMEDIATION_ACTIVITY_TYPE_UID(0)
}

func (x *NetworkRemediationActivity) GetUnmapped() *structpb.Struct {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

// URL: https://schema.ocsf.io/1.3.0/classes/process_remediation_activity
// Event: remediation
// Event UID: 3
type ProcessRemediationActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      enums.PROCESS_REMEDIATION_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	ActivityName    string                                          `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                                   // Caption: Activity;
	Actor           *objects.Actor                                  `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                                     // Caption: Actor; Profile: host;
	Api             *objects.Api                                    `protobuf:"bytes,4,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                         // Caption: API Details; Profile: cloud;
	CategoryName    string                                          `protobuf:"bytes,5,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                                   // Caption: Category;
	CategoryUid     enums.PROCESS_REMEDIATION_ACTIVITY_CATEGORY_UID `protobuf:"varint,6,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	ClassName       string                                          `protobuf:"bytes,7,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                            // Caption: Class;
	ClassUid        enums.PROCESS_REMEDIATION_ACTIVITY_CLASS_UID    `protobuf:"varint,8,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	Cloud           *objects.Cloud                                  `protobuf:"bytes,9,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                                     // Caption: Cloud; Profile: cloud;
	CommandUid      string                                          `protobuf:"bytes,10,opt,name=command_uid,json=commandUid,proto3" json:"command_uid,omitempty"`                                                                                        // Caption: Command UID;
	Count           int32                                           `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`                                                                                                                   // Caption: Count;
	Countermeasures []*objects.D3Fend                               `protobuf:"bytes,12,rep,name=countermeasures,proto3" json:"countermeasures,omitempty"`                                                                                                // Caption: Countermeasures;
	Device          *objects.Device                                 `protobuf:"bytes,13,opt,name=device,proto3" json:"device,omitempty"`                                                                                                                  // Caption: Device; Profile: host;
	Duration        int64                                           `protobuf:"varint,14,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                             // Caption: Duration Milliseconds;
	EndTime         int64                                           `protobuf:"varint,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                                // Caption: End Time;
	Enrichments     []*objects.Enrichment                           `protobuf:"bytes,16,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                        // Caption: Enrichments;
	Message         string                                          `protobuf:"bytes,17,opt,name=message,proto3" json:"message,omitempty"`                                                                                                                // Caption: Message;
	Metadata        *objects.Metadata                               `protobuf:"bytes,18,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                              // Caption: Metadata;
	Observables     []*objects.Observable                           `protobuf:"bytes,19,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                        // Caption: Observables;
	Osint           []*objects.Osint                                `protobuf:"bytes,20,rep,name=osint,proto3" json:"osint,omitempty"`                                                                                                                    // Profile: osint; Caption: OSINT;
	Process         *objects.Process                                `protobuf:"bytes,21,opt,name=process,proto3" json:"process,omitempty"`                                                                                                                // Caption: Process;
	RawData         string                                          `protobuf:"bytes,22,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                                 // Caption: Raw Data;
	Remediation     *objects.Remediation                            `protobuf:"bytes,23,opt,name=remediation,proto3" json:"remediation,omitempty"`                                                                                                        // Caption: Remediation Guidance;
	Scan            *objects.Scan                                   `protobuf:"bytes,24,opt,name=scan,proto3" json:"scan,omitempty"`                                                                                                                      // Caption: Scan;
	Severity        string                                          `protobuf:"bytes,25,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                              // Caption: Severity;
	SeverityId      enums.PROCESS_REMEDIATION_ACTIVITY_SEVERITY_ID  `protobuf:"varint,26,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`    // Caption: Severity ID;
	StartTime       int64                                           `protobuf:"varint,27,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                          // Caption: Start Time;
	Status          string                                          `protobuf:"bytes,28,opt,name=status,proto3" json:"status,omitempty"`                                                                                                                  // Caption: Status;
	StatusCode      string                                          `protobuf:"bytes,29,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                        // Caption: Status Code;
	StatusDetail    string                                          `protobuf:"bytes,30,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                                  // Caption: Status Detail;
	StatusId        enums.PROCESS_REMEDIATION_ACTIVITY_STATUS_ID    `protobuf:"varint,31,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`            // Caption: Status ID;
	Time            int64                                           `protobuf:"varint,32,opt,name=time,proto3" json:"time,omitempty"`                                                                                                                     // Caption: Event Time;
	TimezoneOffset  int32                                           `protobuf:"varint,33,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                           // Caption: Timezone Offset;
	TypeName        string                                          `protobuf:"bytes,34,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                              // Caption: Type Name;
	TypeUid         enums.PROCESS_REMEDIATION_ACTIVITY_TYPE_UID     `protobuf:"varint,35,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                // Caption: Type ID;
	Unmapped        *structpb.Struct                                `protobuf:"bytes,36,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                              // Caption: Unmapped Data;
}

func (x *ProcessRemediationActivity) Reset() {
	*x = ProcessRemediationActivity{}
	mi := &file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRemediationActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRemediationActivity) ProtoMessage() {}

func (x *ProcessRemediationActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRemediationActivity.ProtoReflect.Descriptor instead.
func (*ProcessRemediationActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessRemediationActivity) GetActivityId() enums.PROCESS_REMEDIATION_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.PROCESS_REMEDIATION_ACTIVITY_ACTIVITY_ID(0)
}

func (x *ProcessRemediationActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ProcessRemediationActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *ProcessRemediationActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ProcessRemediationActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ProcessRemediationActivity) GetCategoryUid() enums.PROCESS_REMEDIATION_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.PROCESS_REMEDIATION_ACTIVITY_CATEGORY_UID(0)
}

func (x *ProcessRemediationActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *ProcessRemediationActivity) GetClassUid() enums.PROCESS_REMEDIATION_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.PROCESS_REMEDIATION_ACTIVITY_CLASS_UID(0)
}

func (x *ProcessRemediationActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *ProcessRemediationActivity) GetCommandUid() string {
	if x != nil {
		return x.CommandUid
	}
	return ""
}

func (x *ProcessRemediationActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProcessRemediationActivity) GetCountermeasures() []*objects.D3Fend {
	if x != nil {
		return x.Countermeasures
	}
	return nil
}

func (x *ProcessRemediationActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ProcessRemediationActivity) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ProcessRemediationActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProcessRemediationActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *ProcessRemediationActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessRemediationActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ProcessRemediationActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *ProcessRemediationActivity) GetOsint() []*objects.Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

func (x *ProcessRemediationActivity) GetProcess() *objects.Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *ProcessRemediationActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *ProcessRemediationActivity) GetRemediation() *objects.Remediation {
	if x != nil {
		return x.Remediation
	}
	return nil
}

func (x *ProcessRemediationActivity) GetScan() *objects.Scan {
	if x != nil {
		return x.Scan
	}
	return nil
}

func (x *ProcessRemediationActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ProcessRemediationActivity) GetSeverityId() enums.PROCESS_REMEDIATION_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.PROCESS_REMEDIATION_ACTIVITY_SEVERITY_ID(0)
}

func (x *ProcessRemediationActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProcessRemediationActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessRemediationActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *ProcessRemediationActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *ProcessRemediationActivity) GetStatusId() enums.PROCESS_REMEDIATION_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.PROCESS_REMEDIATION_ACTIVITY_STATUS_ID(0)
}

func (x *ProcessRemediationActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ProcessRemediationActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *ProcessRemediationActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *ProcessRemediationActivity) GetTypeUid() enums.PROCESS_REMEDIATION_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.PROCESS_REMEDIATION_ACTIVITY_TYPE_UID(0)
}

func (x *ProcessRemediationActivity) GetUnmapped() *structpb.Struct {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

// Event: remediation
// Event UID: 1
// URL: https://schema.ocsf.io/1.3.0/classes/remediation_activity
type RemediationActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      enums.REMEDIATION_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	ActivityName    string                                  `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                           // Caption: Activity;
	Actor           *objects.Actor                          `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                             // Caption: Actor; Profile: host;
	Api             *objects.Api                            `protobuf:"bytes,4,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                 // Caption: API Details; Profile: cloud;
	CategoryName    string                                  `protobuf:"bytes,5,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                           // Caption: Category;
	CategoryUid     enums.REMEDIATION_ACTIVITY_CATEGORY_UID `protobuf:"varint,6,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	ClassName       string                                  `protobuf:"bytes,7,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                    // Caption: Class;
	ClassUid        enums.REMEDIATION_ACTIVITY_CLASS_UID    `protobuf:"varint,8,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	Cloud           *objects.Cloud                          `protobuf:"bytes,9,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                             // Caption: Cloud; Profile: cloud;
	CommandUid      string                                  `protobuf:"bytes,10,opt,name=command_uid,json=commandUid,proto3" json:"command_uid,omitempty"`                                                                                // Caption: Command UID;
	Count           int32                                   `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`                                                                                                           // Caption: Count;
	Countermeasures []*objects.D3Fend                       `protobuf:"bytes,12,rep,name=countermeasures,proto3" json:"countermeasures,omitempty"`                                                                                        // Caption: Countermeasures;
	Device          *objects.Device                         `protobuf:"bytes,13,opt,name=device,proto3" json:"device,omitempty"`                                                                                                          // Caption: Device; Profile: host;
	Duration        int64                                   `protobuf:"varint,14,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                     // Caption: Duration Milliseconds;
	EndTime         int64                                   `protobuf:"varint,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                        // Caption: End Time;
	Enrichments     []*objects.Enrichment                   `protobuf:"bytes,16,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                // Caption: Enrichments;
	Message         string                                  `protobuf:"bytes,17,opt,name=message,proto3" json:"message,omitempty"`                                                                                                        // Caption: Message;
	Metadata        *objects.Metadata                       `protobuf:"bytes,18,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                      // Caption: Metadata;
	Observables     []*objects.Observable                   `protobuf:"bytes,19,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                // Caption: Observables;
	Osint           []*objects.Osint                        `protobuf:"bytes,20,rep,name=osint,proto3" json:"osint,omitempty"`                                                                                                            // Caption: OSINT; Profile: osint;
	RawData         string                                  `protobuf:"bytes,21,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                         // Caption: Raw Data;
	Remediation     *objects.Remediation                    `protobuf:"bytes,22,opt,name=remediation,proto3" json:"remediation,omitempty"`                                                                                                // Caption: Remediation Guidance;
	Scan            *objects.Scan                           `protobuf:"bytes,23,opt,name=scan,proto3" json:"scan,omitempty"`                                                                                                              // Caption: Scan;
	Severity        string                                  `protobuf:"bytes,24,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                      // Caption: Severity;
	SeverityId      enums.REMEDIATION_ACTIVITY_SEVERITY_ID  `protobuf:"varint,25,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`    // Caption: Severity ID;
	StartTime       int64                                   `protobuf:"varint,26,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                  // Caption: Start Time;
	Status          string                                  `protobuf:"bytes,27,opt,name=status,proto3" json:"status,omitempty"`                                                                                                          // Caption: Status;
	StatusCode      string                                  `protobuf:"bytes,28,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                // Caption: Status Code;
	StatusDetail    string                                  `protobuf:"bytes,29,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                          // Caption: Status Detail;
	StatusId        enums.REMEDIATION_ACTIVITY_STATUS_ID    `protobuf:"varint,30,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`            // Caption: Status ID;
	Time            int64                                   `protobuf:"varint,31,opt,name=time,proto3" json:"time,omitempty"`                                                                                                             // Caption: Event Time;
	TimezoneOffset  int32                                   `protobuf:"varint,32,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                   // Caption: Timezone Offset;
	TypeName        string                                  `protobuf:"bytes,33,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                      // Caption: Type Name;
	TypeUid         enums.REMEDIATION_ACTIVITY_TYPE_UID     `protobuf:"varint,34,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                // Caption: Type ID;
	Unmapped        *structpb.Struct                        `protobuf:"bytes,35,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                      // Caption: Unmapped Data;
}

func (x *RemediationActivity) Reset() {
	*x = RemediationActivity{}
	mi := &file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemediationActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemediationActivity) ProtoMessage() {}

func (x *RemediationActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemediationActivity.ProtoReflect.Descriptor instead.
func (*RemediationActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescGZIP(), []int{3}
}

func (x *RemediationActivity) GetActivityId() enums.REMEDIATION_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.REMEDIATION_ACTIVITY_ACTIVITY_ID(0)
}

func (x *RemediationActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *RemediationActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *RemediationActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *RemediationActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *RemediationActivity) GetCategoryUid() enums.REMEDIATION_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.REMEDIATION_ACTIVITY_CATEGORY_UID(0)
}

func (x *RemediationActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *RemediationActivity) GetClassUid() enums.REMEDIATION_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.REMEDIATION_ACTIVITY_CLASS_UID(0)
}

func (x *RemediationActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *RemediationActivity) GetCommandUid() string {
	if x != nil {
		return x.CommandUid
	}
	return ""
}

func (x *RemediationActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RemediationActivity) GetCountermeasures() []*objects.D3Fend {
	if x != nil {
		return x.Countermeasures
	}
	return nil
}

func (x *RemediationActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *RemediationActivity) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RemediationActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RemediationActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *RemediationActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RemediationActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RemediationActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *RemediationActivity) GetOsint() []*objects.Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

func (x *RemediationActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *RemediationActivity) GetRemediation() *objects.Remediation {
	if x != nil {
		return x.Remediation
	}
	return nil
}

func (x *RemediationActivity) GetScan() *objects.Scan {
	if x != nil {
		return x.Scan
	}
	return nil
}

func (x *RemediationActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *RemediationActivity) GetSeverityId() enums.REMEDIATION_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.REMEDIATION_ACTIVITY_SEVERITY_ID(0)
}

func (x *RemediationActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RemediationActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RemediationActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *RemediationActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *RemediationActivity) GetStatusId() enums.REMEDIATION_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.REMEDIATION_ACTIVITY_STATUS_ID(0)
}

func (x *RemediationActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RemediationActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *RemediationActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *RemediationActivity) GetTypeUid() enums.REMEDIATION_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.REMEDIATION_ACTIVITY_TYPE_UID(0)
}

func (x *RemediationActivity) GetUnmapped() *structpb.Struct {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

var File_ocsf_v1_3_0_events_remediation_remediation_proto protoreflect.FileDescriptor

var file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x30, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x33, 0x5f,
	0x30, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x0e, 0x0a, 0x17, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x6c, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49,
	0x4c, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f,
	0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f,
	0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61,
	0x70, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6f, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x66, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53,
	0x53, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12,
	0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x33, 0x46, 0x65, 0x6e, 0x64, 0x52, 0x0f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x12,
	0x33, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x65,
	0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2d,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x52, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52,
	0x04, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x6c, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49,
	0x4c, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x66, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x49, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x45,
	0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x63,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x48, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x4d,
	0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08,
	0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x22, 0xab, 0x0f, 0x0a, 0x1a, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x6f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x4d, 0x45,
	0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x72, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4e, 0x45,
	0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47,
	0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4e, 0x45,
	0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53,
	0x5f, 0x55, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x30,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x53, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x33, 0x46, 0x65,
	0x6e, 0x64, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f,
	0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x73,
	0x63, 0x61, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x6f, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44,
	0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f,
	0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x69, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4e,
	0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x66, 0x0a, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44,
	0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x22, 0x8e, 0x0f, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x6f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a,
	0x03, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x72,
	0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x69, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55,
	0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x05,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x33, 0x46, 0x65, 0x6e, 0x64, 0x52, 0x0f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b,
	0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x05,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04,
	0x73, 0x63, 0x61, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x6f, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x45,
	0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x69, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74,
	0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x66, 0x0a, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x45,
	0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x75,
	0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x22, 0x9f, 0x0e, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x67, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x52, 0x45, 0x4d, 0x45,
	0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x6a, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x52, 0x45,
	0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x61, 0x0a, 0x09, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53,
	0x5f, 0x55, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x30,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x33, 0x46, 0x65, 0x6e, 0x64, 0x52, 0x0f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x12, 0x33,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x14,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x52, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52,
	0x04, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x67, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x52, 0x45,
	0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x61, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x52, 0x45, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x52, 0x45,
	0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x55, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x42, 0x91, 0x02, 0x0a, 0x22, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x10, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x61, 0x6c, 0x6c, 0x6c, 0x61, 0x62, 0x68, 0x2f, 0x6f, 0x63, 0x73, 0x66, 0x2d, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6f, 0x63, 0x73,
	0x66, 0x2f, 0x76, 0x31, 0x5f, 0x33, 0x5f, 0x30, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa2, 0x02, 0x04, 0x4f, 0x56,
	0x45, 0x52, 0xaa, 0x02, 0x1c, 0x4f, 0x63, 0x73, 0x66, 0x2e, 0x56, 0x31, 0x33, 0x30, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0xca, 0x02, 0x1c, 0x4f, 0x63, 0x73, 0x66, 0x5c, 0x56, 0x31, 0x33, 0x30, 0x5c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x5c, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0xe2, 0x02, 0x28, 0x4f, 0x63, 0x73, 0x66, 0x5c, 0x56, 0x31, 0x33, 0x30, 0x5c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x5c, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x4f, 0x63,
	0x73, 0x66, 0x3a, 0x3a, 0x56, 0x31, 0x33, 0x30, 0x3a, 0x3a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x3a, 0x3a, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescOnce sync.Once
	file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescData = file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDesc
)

func file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescGZIP() []byte {
	file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescOnce.Do(func() {
		file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescData = protoimpl.X.CompressGZIP(file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescData)
	})
	return file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDescData
}

var file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ocsf_v1_3_0_events_remediation_remediation_proto_goTypes = []any{
	(*FileRemediationActivity)(nil),                      // 0: ocsf.v1_3_0.events.remediation.FileRemediationActivity
	(*NetworkRemediationActivity)(nil),                   // 1: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity
	(*ProcessRemediationActivity)(nil),                   // 2: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity
	(*RemediationActivity)(nil),                          // 3: ocsf.v1_3_0.events.remediation.RemediationActivity
	(enums.FILE_REMEDIATION_ACTIVITY_ACTIVITY_ID)(0),     // 4: ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_ACTIVITY_ID
	(*objects.Actor)(nil),                                // 5: ocsf.v1_3_0.objects.Actor
	(*objects.Api)(nil),                                  // 6: ocsf.v1_3_0.objects.Api
	(enums.FILE_REMEDIATION_ACTIVITY_CATEGORY_UID)(0),    // 7: ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_CATEGORY_UID
	(enums.FILE_REMEDIATION_ACTIVITY_CLASS_UID)(0),       // 8: ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_CLASS_UID
	(*objects.Cloud)(nil),                                // 9: ocsf.v1_3_0.objects.Cloud
	(*objects.D3Fend)(nil),                               // 10: ocsf.v1_3_0.objects.D3Fend
	(*objects.Device)(nil),                               // 11: ocsf.v1_3_0.objects.Device
	(*objects.Enrichment)(nil),                           // 12: ocsf.v1_3_0.objects.Enrichment
	(*objects.File)(nil),                                 // 13: ocsf.v1_3_0.objects.File
	(*objects.Metadata)(nil),                             // 14: ocsf.v1_3_0.objects.Metadata
	(*objects.Observable)(nil),                           // 15: ocsf.v1_3_0.objects.Observable
	(*objects.Osint)(nil),                                // 16: ocsf.v1_3_0.objects.Osint
	(*objects.Remediation)(nil),                          // 17: ocsf.v1_3_0.objects.Remediation
	(*objects.Scan)(nil),                                 // 18: ocsf.v1_3_0.objects.Scan
	(enums.FILE_REMEDIATION_ACTIVITY_SEVERITY_ID)(0),     // 19: ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_SEVERITY_ID
	(enums.FILE_REMEDIATION_ACTIVITY_STATUS_ID)(0),       // 20: ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_STATUS_ID
	(enums.FILE_REMEDIATION_ACTIVITY_TYPE_UID)(0),        // 21: ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_TYPE_UID
	(*structpb.Struct)(nil),                              // 22: google.protobuf.Struct
	(enums.NETWORK_REMEDIATION_ACTIVITY_ACTIVITY_ID)(0),  // 23: ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_ACTIVITY_ID
	(enums.NETWORK_REMEDIATION_ACTIVITY_CATEGORY_UID)(0), // 24: ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_CATEGORY_UID
	(enums.NETWORK_REMEDIATION_ACTIVITY_CLASS_UID)(0),    // 25: ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_CLASS_UID
	(*objects.NetworkConnectionInfo)(nil),                // 26: ocsf.v1_3_0.objects.NetworkConnectionInfo
	(enums.NETWORK_REMEDIATION_ACTIVITY_SEVERITY_ID)(0),  // 27: ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_SEVERITY_ID
	(enums.NETWORK_REMEDIATION_ACTIVITY_STATUS_ID)(0),    // 28: ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_STATUS_ID
	(enums.NETWORK_REMEDIATION_ACTIVITY_TYPE_UID)(0),     // 29: ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_TYPE_UID
	(enums.PROCESS_REMEDIATION_ACTIVITY_ACTIVITY_ID)(0),  // 30: ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_ACTIVITY_ID
	(enums.PROCESS_REMEDIATION_ACTIVITY_CATEGORY_UID)(0), // 31: ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_CATEGORY_UID
	(enums.PROCESS_REMEDIATION_ACTIVITY_CLASS_UID)(0),    // 32: ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_CLASS_UID
	(*objects.Process)(nil),                              // 33: ocsf.v1_3_0.objects.Process
	(enums.PROCESS_REMEDIATION_ACTIVITY_SEVERITY_ID)(0),  // 34: ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_SEVERITY_ID
	(enums.PROCESS_REMEDIATION_ACTIVITY_STATUS_ID)(0),    // 35: ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_STATUS_ID
	(enums.PROCESS_REMEDIATION_ACTIVITY_TYPE_UID)(0),     // 36: ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_TYPE_UID
	(enums.REMEDIATION_ACTIVITY_ACTIVITY_ID)(0),          // 37: ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_ACTIVITY_ID
	(enums.REMEDIATION_ACTIVITY_CATEGORY_UID)(0),         // 38: ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_CATEGORY_UID
	(enums.REMEDIATION_ACTIVITY_CLASS_UID)(0),            // 39: ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_CLASS_UID
	(enums.REMEDIATION_ACTIVITY_SEVERITY_ID)(0),          // 40: ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_SEVERITY_ID
	(enums.REMEDIATION_ACTIVITY_STATUS_ID)(0),            // 41: ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_STATUS_ID
	(enums.REMEDIATION_ACTIVITY_TYPE_UID)(0),             // 42: ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_TYPE_UID
}
var file_ocsf_v1_3_0_events_remediation_remediation_proto_depIdxs = []int32{
	4,  // 0: ocsf.v1_3_0.events.remediation.FileRemediationActivity.activity_id:type_name -> ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_ACTIVITY_ID
	5,  // 1: ocsf.v1_3_0.events.remediation.FileRemediationActivity.actor:type_name -> ocsf.v1_3_0.objects.Actor
	6,  // 2: ocsf.v1_3_0.events.remediation.FileRemediationActivity.api:type_name -> ocsf.v1_3_0.objects.Api
	7,  // 3: ocsf.v1_3_0.events.remediation.FileRemediationActivity.category_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_CATEGORY_UID
	8,  // 4: ocsf.v1_3_0.events.remediation.FileRemediationActivity.class_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_CLASS_UID
	9,  // 5: ocsf.v1_3_0.events.remediation.FileRemediationActivity.cloud:type_name -> ocsf.v1_3_0.objects.Cloud
	10, // 6: ocsf.v1_3_0.events.remediation.FileRemediationActivity.countermeasures:type_name -> ocsf.v1_3_0.objects.D3Fend
	11, // 7: ocsf.v1_3_0.events.remediation.FileRemediationActivity.device:type_name -> ocsf.v1_3_0.objects.Device
	12, // 8: ocsf.v1_3_0.events.remediation.FileRemediationActivity.enrichments:type_name -> ocsf.v1_3_0.objects.Enrichment
	13, // 9: ocsf.v1_3_0.events.remediation.FileRemediationActivity.file:type_name -> ocsf.v1_3_0.objects.File
	14, // 10: ocsf.v1_3_0.events.remediation.FileRemediationActivity.metadata:type_name -> ocsf.v1_3_0.objects.Metadata
	15, // 11: ocsf.v1_3_0.events.remediation.FileRemediationActivity.observables:type_name -> ocsf.v1_3_0.objects.Observable
	16, // 12: ocsf.v1_3_0.events.remediation.FileRemediationActivity.osint:type_name -> ocsf.v1_3_0.objects.Osint
	17, // 13: ocsf.v1_3_0.events.remediation.FileRemediationActivity.remediation:type_name -> ocsf.v1_3_0.objects.Remediation
	18, // 14: ocsf.v1_3_0.events.remediation.FileRemediationActivity.scan:type_name -> ocsf.v1_3_0.objects.Scan
	19, // 15: ocsf.v1_3_0.events.remediation.FileRemediationActivity.severity_id:type_name -> ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_SEVERITY_ID
	20, // 16: ocsf.v1_3_0.events.remediation.FileRemediationActivity.status_id:type_name -> ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_STATUS_ID
	21, // 17: ocsf.v1_3_0.events.remediation.FileRemediationActivity.type_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.FILE_REMEDIATION_ACTIVITY_TYPE_UID
	22, // 18: ocsf.v1_3_0.events.remediation.FileRemediationActivity.unmapped:type_name -> google.protobuf.Struct
	23, // 19: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.activity_id:type_name -> ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_ACTIVITY_ID
	5,  // 20: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.actor:type_name -> ocsf.v1_3_0.objects.Actor
	6,  // 21: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.api:type_name -> ocsf.v1_3_0.objects.Api
	24, // 22: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.category_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_CATEGORY_UID
	25, // 23: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.class_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_CLASS_UID
	9,  // 24: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.cloud:type_name -> ocsf.v1_3_0.objects.Cloud
	26, // 25: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.connection_info:type_name -> ocsf.v1_3_0.objects.NetworkConnectionInfo
	10, // 26: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.countermeasures:type_name -> ocsf.v1_3_0.objects.D3Fend
	11, // 27: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.device:type_name -> ocsf.v1_3_0.objects.Device
	12, // 28: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.enrichments:type_name -> ocsf.v1_3_0.objects.Enrichment
	14, // 29: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.metadata:type_name -> ocsf.v1_3_0.objects.Metadata
	15, // 30: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.observables:type_name -> ocsf.v1_3_0.objects.Observable
	16, // 31: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.osint:type_name -> ocsf.v1_3_0.objects.Osint
	17, // 32: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.remediation:type_name -> ocsf.v1_3_0.objects.Remediation
	18, // 33: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.scan:type_name -> ocsf.v1_3_0.objects.Scan
	27, // 34: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.severity_id:type_name -> ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_SEVERITY_ID
	28, // 35: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.status_id:type_name -> ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_STATUS_ID
	29, // 36: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.type_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.NETWORK_REMEDIATION_ACTIVITY_TYPE_UID
	22, // 37: ocsf.v1_3_0.events.remediation.NetworkRemediationActivity.unmapped:type_name -> google.protobuf.Struct
	30, // 38: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.activity_id:type_name -> ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_ACTIVITY_ID
	5,  // 39: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.actor:type_name -> ocsf.v1_3_0.objects.Actor
	6,  // 40: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.api:type_name -> ocsf.v1_3_0.objects.Api
	31, // 41: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.category_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_CATEGORY_UID
	32, // 42: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.class_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_CLASS_UID
	9,  // 43: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.cloud:type_name -> ocsf.v1_3_0.objects.Cloud
	10, // 44: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.countermeasures:type_name -> ocsf.v1_3_0.objects.D3Fend
	11, // 45: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.device:type_name -> ocsf.v1_3_0.objects.Device
	12, // 46: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.enrichments:type_name -> ocsf.v1_3_0.objects.Enrichment
	14, // 47: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.metadata:type_name -> ocsf.v1_3_0.objects.Metadata
	15, // 48: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.observables:type_name -> ocsf.v1_3_0.objects.Observable
	16, // 49: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.osint:type_name -> ocsf.v1_3_0.objects.Osint
	33, // 50: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.process:type_name -> ocsf.v1_3_0.objects.Process
	17, // 51: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.remediation:type_name -> ocsf.v1_3_0.objects.Remediation
	18, // 52: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.scan:type_name -> ocsf.v1_3_0.objects.Scan
	34, // 53: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.severity_id:type_name -> ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_SEVERITY_ID
	35, // 54: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.status_id:type_name -> ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_STATUS_ID
	36, // 55: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.type_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.PROCESS_REMEDIATION_ACTIVITY_TYPE_UID
	22, // 56: ocsf.v1_3_0.events.remediation.ProcessRemediationActivity.unmapped:type_name -> google.protobuf.Struct
	37, // 57: ocsf.v1_3_0.events.remediation.RemediationActivity.activity_id:type_name -> ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_ACTIVITY_ID
	5,  // 58: ocsf.v1_3_0.events.remediation.RemediationActivity.actor:type_name -> ocsf.v1_3_0.objects.Actor
	6,  // 59: ocsf.v1_3_0.events.remediation.RemediationActivity.api:type_name -> ocsf.v1_3_0.objects.Api
	38, // 60: ocsf.v1_3_0.events.remediation.RemediationActivity.category_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_CATEGORY_UID
	39, // 61: ocsf.v1_3_0.events.remediation.RemediationActivity.class_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_CLASS_UID
	9,  // 62: ocsf.v1_3_0.events.remediation.RemediationActivity.cloud:type_name -> ocsf.v1_3_0.objects.Cloud
	10, // 63: ocsf.v1_3_0.events.remediation.RemediationActivity.countermeasures:type_name -> ocsf.v1_3_0.objects.D3Fend
	11, // 64: ocsf.v1_3_0.events.remediation.RemediationActivity.device:type_name -> ocsf.v1_3_0.objects.Device
	12, // 65: ocsf.v1_3_0.events.remediation.RemediationActivity.enrichments:type_name -> ocsf.v1_3_0.objects.Enrichment
	14, // 66: ocsf.v1_3_0.events.remediation.RemediationActivity.metadata:type_name -> ocsf.v1_3_0.objects.Metadata
	15, // 67: ocsf.v1_3_0.events.remediation.RemediationActivity.observables:type_name -> ocsf.v1_3_0.objects.Observable
	16, // 68: ocsf.v1_3_0.events.remediation.RemediationActivity.osint:type_name -> ocsf.v1_3_0.objects.Osint
	17, // 69: ocsf.v1_3_0.events.remediation.RemediationActivity.remediation:type_name -> ocsf.v1_3_0.objects.Remediation
	18, // 70: ocsf.v1_3_0.events.remediation.RemediationActivity.scan:type_name -> ocsf.v1_3_0.objects.Scan
	40, // 71: ocsf.v1_3_0.events.remediation.RemediationActivity.severity_id:type_name -> ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_SEVERITY_ID
	41, // 72: ocsf.v1_3_0.events.remediation.RemediationActivity.status_id:type_name -> ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_STATUS_ID
	42, // 73: ocsf.v1_3_0.events.remediation.RemediationActivity.type_uid:type_name -> ocsf.v1_3_0.events.remediation.enums.REMEDIATION_ACTIVITY_TYPE_UID
	22, // 74: ocsf.v1_3_0.events.remediation.RemediationActivity.unmapped:type_name -> google.protobuf.Struct
	75, // [75:75] is the sub-list for method output_type
	75, // [75:75] is the sub-list for method input_type
	75, // [75:75] is the sub-list for extension type_name
	75, // [75:75] is the sub-list for extension extendee
	0,  // [0:75] is the sub-list for field type_name
}

func init() { file_ocsf_v1_3_0_events_remediation_remediation_proto_init() }
func file_ocsf_v1_3_0_events_remediation_remediation_proto_init() {
	if File_ocsf_v1_3_0_events_remediation_remediation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ocsf_v1_3_0_events_remediation_remediation_proto_goTypes,
		DependencyIndexes: file_ocsf_v1_3_0_events_remediation_remediation_proto_depIdxs,
		MessageInfos:      file_ocsf_v1_3_0_events_remediation_remediation_proto_msgTypes,
	}.Build()
	File_ocsf_v1_3_0_events_remediation_remediation_proto = out.File
	file_ocsf_v1_3_0_events_remediation_remediation_proto_rawDesc = nil
	file_ocsf_v1_3_0_events_remediation_remediation_proto_goTypes = nil
	file_ocsf_v1_3_0_events_remediation_remediation_proto_depIdxs = nil
}
